{"name":"Pumalog","tagline":"The Pumalog is a photolog - here you can easily share your favorite pictures with your family and friends - on your own webserver.","body":"### About pumalog:\r\n\r\nPumalog is a photolog - here you can easily share your favorite photos with your family and friends - on your own webserver.\r\n\r\n### Features\r\n- saves the uploaded pictures without quality loss. \r\n- orders pictures into entries with a headline and optional text\r\n- uses exif rotation info to rotate pictures\r\n- manual rotation\r\n- one click picture enhancement using filters\r\n- ...\r\n\r\n### Screenshots\r\n![Screenshot 1](http://dirtyhack.de/pumalog/screenshots/screenshot_01.jpg)\r\n![Screenshot 2](http://dirtyhack.de/pumalog/screenshots/screenshot_02.jpg)\r\n![Screenshot 3](http://dirtyhack.de/pumalog/screenshots/screenshot_03.jpg)\r\n![Screenshot 4](http://dirtyhack.de/pumalog/screenshots/screenshot_04.jpg)\r\n\r\n### License:\r\n[Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported](http://creativecommons.org/licenses/by-nc-sa/3.0/)\r\n\r\n### Installation instructions:\r\n\r\n(the perl script install.pl does this up to a point - see below - for you on linux systems)\r\nput the pumalog files in a folder inside the serverroot (i.e. \"/var/www/pumalog/\") and make them owned by webserver user (www-data):\r\ninside this folder, create the following data files and make them read-writable for and owned by webserver user (www-data):\r\nlogin/data/rndfile.txt \r\ncontent/ignorelist.txt\r\n\r\ninside this folder, create the following data folders and make them read-write-executable for and owned by webserver user (www-data):\r\nincoming/\r\ndeleted/ \r\ncontent/ \r\nupload/ \r\nimgtemp/\r\n\r\n(install.pl ends here)\r\n\r\nconfigure the users and passwordfile in login/.htaccess\r\ncopy the login/.htaccess file to all data folders you created above\r\ncreate the passwordfile and the users in it by using htpasswd\r\nconfigure the users and their permissions in function_permissions as follows:\r\n\r\neach user has one line inside \r\nfunction getallusers(){\r\nwhich looks like this:\r\n\t$users[] = \"<username>\";\r\n\r\nthe right to edit is given by a line\r\n$userinfo[\"canedit\"][\"<username>\"] = true;\r\notherwise, a user can only view the contents of the pumalog\r\n\r\nthe right to see all entries is given by a line\r\n$userinfo[\"cansee\"][\"<username>\"] = true;\r\n\r\notherwise, a user can see entries\r\n- that have no special visibility flags\r\n- that he may see according to the visibility flags\r\n\r\nIf you want to use the mailparser:\r\ninside config.php, set $mailpath to the path where the mail files can be found. \r\nmove the contents of the script/ folder to /root/script\r\n\r\n### Nice to know:\r\nPumalog supports jpg images of any size. Other image formats are not supported. The original images are stored in the content/ folder as they were uploaded. They are scaled, rotated, filtered and recompressed at display time.\r\n\r\nDeleted content is not really deleted but moved to dhe deleted/ folder. If you accidentally deleted an entry, you can just manually move it back from the deleted/ folder into the content/ folder to restore it. To permanently delete content you have to manually delete it inside the deleted/ folder.\r\n\r\npumalog supports flv video for PC display and mp4 video for iphone display. Just create an entry and then move the video into the content/ folder, using the same naming schema as with images, but with the flv/mp4 filename extension.\r\n\r\nyou can change the header image on a per-month-basis: inside the headerimages/ folder, create a header_yyyy_mm.png file, where yyyy is the year and mm is the month (01-12). The image will be shown on the page for that month. \r\n\r\n### Known bugs\r\nchanging a timestamp to \"01\" in any field results in errors. Workaround: remove the leading zero and recommit.\r\n\r\n### Change requests\r\n- enable view only mode without password - needs explicit logon and logoff\r\n- function_permissions.php - load permissions from file\r\n- login/ and function_permissions.php - change the way login works so it is not depending on apache auth. build an admin mask for creating and removing users, handling permissions, setting initial passwords. create a password update mask for users.\r\n- function_permissions.php aktuell nur whitelist, auch blacklist erm√∂glichen\r\n\r\n### Attribution\r\n- icons: Iconset ist SweetiePlus by Sublink Interactive: http://sublink.ca/icons/sweetieplus\r\n- Header image by katsrcool on flickr: http://www.flickr.com/photos/katsrcool/8318578664/sizes/o/in/photostream/\r\n- flv-player: http://flv-player.net/players/maxi/documentation/\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}